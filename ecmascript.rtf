{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Consolas;\f1\froman\fcharset0 TimesNewRomanPSMT;\f2\froman\fcharset0 TimesNewRomanPS-BoldMT;
\f3\fnil\fcharset0 Calibri-Bold;\f4\fnil\fcharset0 Calibri;}
{\colortbl;\red255\green255\blue255;\red89\green138\blue67;\red23\green23\blue23;\red0\green0\blue0;
\red70\green137\blue204;\red67\green192\blue160;\red140\green211\blue254;\red202\green202\blue202;\red212\green214\blue154;
\red194\green126\blue101;\red183\green111\blue179;\red167\green197\blue152;\red66\green179\blue255;\red196\green83\blue86;
\red205\green173\blue106;\red255\green255\blue11;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c41569\c60000\c33333;\cssrgb\c11765\c11765\c11765;\cssrgb\c0\c0\c0;
\cssrgb\c33725\c61176\c83922;\cssrgb\c30588\c78824\c69020;\cssrgb\c61176\c86275\c99608;\cssrgb\c83137\c83137\c83137;\cssrgb\c86275\c86275\c66667;
\cssrgb\c80784\c56863\c47059;\cssrgb\c77255\c52549\c75294;\cssrgb\c70980\c80784\c65882;\cssrgb\c30980\c75686\c100000;\cssrgb\c81961\c41176\c41176;
\cssrgb\c84314\c72941\c49020;\cssrgb\c100000\c100000\c0;\cssrgb\c100000\c100000\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 \cb3 \expnd0\expndtw0\kerning0
/**
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* Allows to log eventual array items.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* \cf5 @param\cf2  \cf6 \{*\}\cf2  \cf7 array\cf2  an array.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* \cf5 @param\cf2  \cf6 \{*\}\cf2  \cf7 title\cf2  a title describing the array.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0*/
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf9 logArrayItems\cf8  =
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 (\cf7 array\cf8  = [], \cf7 title\cf8  = \cf10 'No title'\cf8 ) \cf5 =>\cf8  \{
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \'a0 \'a0 \cf11 if\cf8  (\cf6 Array\cf8 .\cf9 isArray\cf8 (\cf7 array\cf8 ) && \cf7 array\cf8 .\cf7 length\cf8  > \cf12 0\cf8 ) \{
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \cf7 console\cf8 .\cf9 log\cf8 (\cf10 `\cf5 $\{\cf7 title\cf5 \}\cf10 :`\cf8 );
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \cf7 array\cf8 .\cf9 forEach\cf8 ((\cf7 item\cf8 , \cf7 index\cf8 ) \cf5 =>\cf8  \cf7 console\cf8 .\cf9 log\cf8 (\cf10 `[\cf5 $\{\cf7 index\cf5 \}\cf10 ]: `\cf8 , \cf7 item\cf8 ));
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \'a0 \'a0 \}
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \};
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 /**
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* Allows to build a Regular Expression running result title.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* 
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* \cf5 @param\cf2  \cf6 \{*\}\cf2  \cf7 appliedMatchFunction\cf2  name of the applied match function.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* 
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* \cf5 @param\cf2  \cf6 \{*\}\cf2  \cf7 evaluatedString\cf2  an evaluated string.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* 
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* \cf5 @param\cf2  \cf6 \{*\}\cf2  \cf7 appliedRegExp\cf2  an applied Regular Expression.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* 
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* \cf5 @returns\cf2  a built String corresponding to a Regular Expression result title.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0*/
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf9 buildRegExpRunningResultTitle\cf8  =
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 (\cf7 appliedMatchFunction\cf8 , \cf7 evaluatedString\cf8 , \cf7 appliedRegExp\cf8 ) \cf5 =>
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \'a0 \'a0 \cf10 `Result after applying '\cf5 $\{\cf7 appliedMatchFunction\cf5 \}\cf10 '`\cf8  +
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \'a0 \'a0 \cf10 ` on '\cf5 $\{\cf7 evaluatedString\cf5 \}\cf10 ' with regular expression '\cf5 $\{\cf7 appliedRegExp\cf5 \}\cf10 '`\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // Expression r\'e9guli\'e8re filtrant tous les mots compos\'e9s de caract\'e8res
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // alphab\'e9tiques suivi d'un underscore et d'un nombre.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // Deux groupes de capture identifi\'e9s:
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // - 1er groupe de capture: product
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // - 2\'e8me groupe de capture: number
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf13 PRODUCT_FILTER_REG_EXP\cf8  =\cf14  /\cf10 (?<\cf7 product\cf10 >[\cf14 a-z\cf10 ]\cf15 +\cf10 )\cf14 _\cf10 (?<\cf7 number\cf10 >\cf14 \\d\cf15 +\cf10 )\cf14 /\cf5 gi\cf8 ;
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf13 STRING_TO_EVALUATE\cf8  = \cf10 'penA1, computer_150, desktop_5, chair_A, eraser_C, screen_55'\cf8 ;
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf13 resultForMatch\cf8  = \cf13 STRING_TO_EVALUATE\cf8 .\cf9 match\cf8 (\cf13 PRODUCT_FILTER_REG_EXP\cf8 ) || [];
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf9 logArrayItems\cf8 (
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf13 resultForMatch\cf8 ,
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf9 buildRegExpRunningResultTitle\cf8 (\cf10 'String#match'\cf8 , \cf13 STRING_TO_EVALUATE\cf8 , \cf13 PRODUCT_FILTER_REG_EXP\cf8 ));
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf13 resultForMatchAll\cf8  = \cf13 STRING_TO_EVALUATE\cf8 .\cf9 matchAll\cf8 (\cf13 PRODUCT_FILTER_REG_EXP\cf8 ) || [];
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf9 logArrayItems\cf8 (
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 [...\cf13 resultForMatchAll\cf8 ],
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf9 buildRegExpRunningResultTitle\cf8 (\cf10 'String#matchAll'\cf8 , \cf13 STRING_TO_EVALUATE\cf8 , \cf13 PRODUCT_FILTER_REG_EXP\cf8 ));
\f1\fs32 \cf4 \
\pard\pardeftab720\qj\partightenfactor0

\f2\b \cf4 \cb1 \'a0
\f1\b0 \

\f2\b \'a0
\f1\b0 \

\f2\b \'a0
\f1\b0 \

\f2\b \'a0
\f1\b0 \

\f2\b \'a0
\f1\b0 \

\f2\b \'a0
\f1\b0 \

\f2\b \'a0
\f1\b0 \

\f2\b \'a0
\f1\b0 \

\f2\b \'a0
\f1\b0 \

\f2\b \'a0
\f1\b0 \

\f2\b \'a0
\f1\b0 \

\f2\b \'a0
\f1\b0 \

\f2\b \'a0
\f1\b0 \

\f2\b \'a0
\f1\b0 \

\f2\b \'a0
\f1\b0 \

\f2\b \'a0
\f1\b0 \

\f2\b \'a0
\f1\b0 \

\f2\b \'a0
\f1\b0 \

\f2\b \'a0
\f1\b0 \

\f2\b \'a0
\f1\b0 \

\f2\b \'a0
\f1\b0 \

\f2\b \'a0
\f1\b0 \

\f2\b \'a0
\f1\b0 \

\f2\b \'a0
\f1\b0 \

\f2\b \'a0
\f1\b0 \

\f2\b \'a0
\f1\b0 \

\f2\b \'a0
\f1\b0 \
\'a0\
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 \cb3 const\cf8  \cf13 ACURA_CAR\cf8  = \{
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf7 brand:\cf8  \cf10 'Acura'\cf8 ,
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf7 model:\cf8  \cf10 'NSX'\cf8 ,
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf7 year:\cf8  \cf12 1997\cf8 ,
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf7 color:\cf8  \cf10 'white championship'
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \}
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf11 for\cf8  (\cf5 const\cf8  \cf13 ACURA_CAR_PROPERTY\cf8  \cf5 in\cf8  \cf13 ACURA_CAR\cf8 ) \{
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf7 console\cf8 .\cf9 log\cf8 (\cf10 `ACURA_CAR#\cf5 $\{\cf13 ACURA_CAR_PROPERTY\cf5 \}\cf10  = \cf5 $\{\cf13 ACURA_CAR\cf8 [\cf13 ACURA_CAR_PROPERTY\cf8 ]\cf5 \}\cf10 `\cf8 );
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \}
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 \'a0
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 /**
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* Allows to retrieve the Global Context before ES2020.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* 
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* \cf5 @returns\cf2  an eventual Global Context.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* 
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* \cf5 @throws\cf2  Error when no Global Context found.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0*/
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf9 retrieveGlobalContextBeforeES2020\cf8  = () \cf5 =>\cf8  \{
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf11 if\cf8  (\cf5 typeof\cf8  \cf7 self\cf8  !== \cf10 'undefined'\cf8 ) \{ \cf11 return\cf8  \cf7 self\cf8 ; \}
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf11 if\cf8  (\cf5 typeof\cf8  \cf7 window\cf8  !== \cf10 'undefined'\cf8 ) \{ \cf11 return\cf8  \cf7 window\cf8 ; \}
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf11 if\cf8  (\cf5 typeof\cf8  \cf7 global\cf8  !== \cf10 'undefined'\cf8 ) \{ \cf11 return\cf8  \cf7 global\cf8 ; \}
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf11 throw\cf8  \cf5 new\cf8  \cf6 Error\cf8 (\cf10 "Not possible to find the global context"\cf8 );
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \};
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf7 console\cf8 .\cf9 log\cf8 (\cf9 retrieveGlobalContextBeforeES2020\cf8 ());
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\sl313\qj\partightenfactor0

\f3\b\fs29\fsmilli14667 \cf4 \cb1 Affichage dans la console si on ex\'e9cute ce code dans un environnement Node JS\'a0:
\f4\b0 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \cb3 <ref *1> Object [global] \{
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 global: [Circular *1],
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 clearInterval: [Function: clearInterval],
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 clearTimeout: [Function: clearTimeout],
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 setInterval: [Function: setInterval],
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 setTimeout: [Function: setTimeout] \{
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 [Symbol(nodejs.util.promisify.custom)]: [Getter]
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \},
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 queueMicrotask: [Function: queueMicrotask],
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 performance: Performance \{
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 nodeTiming: PerformanceNodeTiming \{
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \'a0 name: 'node',
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \'a0 entryType: 'node',
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \'a0 startTime: 0,
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \'a0 duration: 45.99650000035763,
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \'a0 nodeStart: 0.7571000009775162,
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \'a0 v8Start: 3.0175999999046326,
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \'a0 bootstrapComplete: 32.44829999655485,
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \'a0 environment: 15.600099995732307,
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \'a0 loopStart: -1,
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \'a0 loopExit: -1,
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \'a0 idleTime: 0
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \},
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 timeOrigin: 1646566219358.749
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \},
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 clearImmediate: [Function: clearImmediate],
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 setImmediate: [Function: setImmediate] \{
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 [Symbol(nodejs.util.promisify.custom)]: [Getter]
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \}
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \}
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\sl313\sa213\qj\partightenfactor0

\f3\b\fs29\fsmilli14667 \cf4 \cb1 \'a0
\f4\b0 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 \cb3 \'a0
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 /**
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* Allows to wait during a specific time defined in milliseconds.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0*
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* \cf5 @param\cf2  \cf6 \{*\}\cf2  \cf7 timeToWaitInMS\cf2  a time to wait in milliseconds.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0*
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* \cf5 @returns\cf2  a Promise.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0*/
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf9 wait\cf8  = (\cf7 timeToWaitInMS\cf8  = \cf12 0\cf8 ) \cf5 =>
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf5 new\cf8  \cf6 Promise\cf8 ((\cf9 resolve\cf8 ) \cf5 =>\cf8  \{
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \'a0 \'a0 \cf9 setTimeout\cf8 (() \cf5 =>\cf8  \{
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \cf9 resolve\cf8 (\cf10 `Promise resolved after \cf5 $\{\cf7 timeToWaitInMS\cf5 \}\cf10 ms`\cf8 );
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \'a0 \'a0 \}, \cf7 timeToWaitInMS\cf8 );
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \});
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 /**
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 * Asynchronous function allowing to wait a specific time in milliseconds
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 * before ES2020.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 * \cf5 @param\cf2  \cf6 \{*\}\cf2  \cf7 timeToWaitInMS\cf2  a time to wait in milliseconds.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 * \cf5 @returns\cf2  a Promise
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 */
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf9 asyncWaitBeforeES2020\cf8  = \cf5 async\cf8  (\cf7 timeToWaitInMS\cf8 ) \cf5 =>\cf8  \{
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf5 const\cf8  \cf13 result\cf8  = \cf11 await\cf8  \cf9 wait\cf8 (\cf7 timeToWaitInMS\cf8 );
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf11 return\cf8  \cf10 `Result for asynchronous waiting function before ES2020: \cf5 $\{\cf13 result\cf5 \}\cf10 `\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \};
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf9 asyncWaitBeforeES2020\cf8 (\cf12 1000\cf8 ).
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf9 then\cf8 ((\cf7 result\cf8 ) \cf5 =>\cf8  \cf7 console\cf8 .\cf9 log\cf8 (\cf7 result\cf8 ))
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 .\cf9 catch\cf8 ((\cf7 error\cf8 ) \cf5 =>\cf8  \cf7 console\cf8 .\cf9 error\cf8 (\cf7 error\cf8 ));
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // Since ES2020 it is possible to directly wait for the result of an
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // asynchronous operation without encapsulating this processing in
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // an asynchronous function.
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf11 try\cf8  \{
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf5 const\cf8  \cf13 result\cf8  = \cf11 await\cf8  \cf9 wait\cf8 (\cf12 3000\cf8 );
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf7 console\cf8 .\cf9 log\cf8 (\cf10 'Result for asynchronous waiting function since ES2020:'\cf8 , \cf13 result\cf8 );
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \}
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf11 catch\cf8  (\cf7 error\cf8 ) \{
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf7 console\cf8 .\cf9 error\cf8 (\cf7 error\cf8 );
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \}
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\sl313\qj\partightenfactor0

\f3\b\fs29\fsmilli14667 \cf4 \cb1 \'a0
\f4\b0 \

\f3\b \'a0
\f4\b0 \

\f3\b \'a0
\f4\b0 \
\pard\pardeftab720\li2880\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 \cb3 let\cf8  \cf7 theme\cf8 ;
\f1\fs32 \cf4 \
\pard\pardeftab720\li2880\partightenfactor0

\f0\fs21\fsmilli10667 \cf11 try\cf8  \{
\f1\fs32 \cf4 \
\pard\pardeftab720\li2880\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf7 theme\cf8  = \cf11 await\cf8  \cf5 import\cf8 (\cf10 'url_1_to_theme'\cf8 );
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \} \cf11 catch\cf8  \{
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf7 theme\cf8  = \cf11 await\cf8  \cf5 import\cf8 (\cf10 'url_2_to_theme'\cf8 );
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \}
\f1\fs32 \cf4 \
\pard\pardeftab720\sl342\partightenfactor0

\f4 \cf4 \cb1 \
\pard\pardeftab720\sl313\sa213\partightenfactor0

\fs29\fsmilli14667 \cf4 \'a0
\f1\fs32 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 \cb3 import\cf8 (\cf10 'module.mjs'\cf8 ).\cf9 then\cf8 ((\cf7 module\cf8 ) \cf5 =>\cf8  \{
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf2 // ...
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \});
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // on peut aussi \'e9crire :
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf5 async\cf8  () \cf5 =>\cf8  \{
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf5 const\cf8  \cf13 module\cf8  = \cf11 await\cf8  \cf5 import\cf8 (\cf10 'module.mjs'\cf8 );
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf2 // ...
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \};
\f1\fs32 \cf4 \
\pard\pardeftab720\qj\partightenfactor0
\cf4 \cb1 \'a0\
\pard\pardeftab720\li1440\partightenfactor0

\f3\b\fs29\fsmilli14667 \cf4 \cb3 \'a0
\f1\b0\fs32 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // --------------------------------- //
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // ----------- utils.mjs ----------- //
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // --------------------------------- //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf13 PI_VALUE\cf8  = \cf12 3.14\cf8 ;
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 function\cf8  \cf9 add\cf8 (\cf7 operand1\cf8  = \cf12 0\cf8 , \cf7 operand2\cf8  = \cf12 0\cf8 ) \{
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf11 return\cf8  \cf7 operand1\cf8  + \cf7 operand2\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \}
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 function\cf8  \cf9 substract\cf8 (\cf7 operand1\cf8  = \cf12 0\cf8 , \cf7 operand2\cf8  = \cf12 0\cf8 ) \{
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf11 return\cf8  \cf7 operand1\cf8  - \cf7 operand2\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \}
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 function\cf8  \cf9 multiply\cf8 (\cf7 operand1\cf8  = \cf12 0\cf8 , \cf7 operand2\cf8  = \cf12 0\cf8 ) \{
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf11 return\cf8  \cf7 operand1\cf8  * \cf7 operand2\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \}
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 function\cf8  \cf9 log\cf8 (\cf7 message\cf8 ) \{
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf7 console\cf8 .\cf9 log\cf8 (\cf7 message\cf8 );
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \}
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf11 export\cf8  \{ \cf9 add\cf8 , \cf9 substract\cf8 , \cf9 multiply\cf8 , \cf9 log\cf8 , \cf13 PI_VALUE\cf8  \};
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\sl313\qj\partightenfactor0

\f4\fs29\fsmilli14667 \cf4 \cb1 \'a0\
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 \cb3 // --------------------------------- //
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // ----------- main.mjs ------------ //
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // --------------------------------- //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // Module Namespace Exports
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf11 export\cf8  \cf5 *\cf8  \cf11 as\cf8  \cf7 utils\cf8  \cf11 from\cf8  \cf10 './utils.mjs'\cf8 ;
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\sl313\qj\partightenfactor0

\f4\fs29\fsmilli14667 \cf4 \cb1 \'a0\
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 \cb3 // ---------------------------------------- //
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // ----------- utils_client.mjs ----------- //
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // ---------------------------------------- //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // Use of 'utils' Module Namespace
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf11 import\cf8  \{ \cf7 utils\cf8  \} \cf11 from\cf8  \cf10 './main.mjs'\cf8 ;
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf7 utils\cf8 .\cf9 log\cf8 (\cf7 utils\cf8 .\cf9 add\cf8 (\cf12 1\cf8 , \cf12 2\cf8 )); \cf2 // 3
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf7 utils\cf8 .\cf9 log\cf8 (\cf7 utils\cf8 .\cf9 substract\cf8 (\cf12 3\cf8 , \cf12 2\cf8 )); \cf2 // 1
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf7 utils\cf8 .\cf9 log\cf8 (\cf7 utils\cf8 .\cf9 multiply\cf8 (\cf12 3\cf8 , \cf12 5\cf8 )); \cf2 // 15
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf7 utils\cf8 .\cf9 log\cf8 (\cf7 utils\cf8 .\cf13 PI_VALUE\cf8 ); \cf2 // 3.14
\f1\fs32 \cf4 \
\pard\pardeftab720\qj\partightenfactor0

\f4 \cf4 \cb1 \'a0
\f1 \

\f4 \'a0
\f1 \

\f4 \'a0
\f1 \

\f4 \'a0
\f1 \

\f4 \'a0
\f1 \

\f4 \'a0
\f1 \

\f4 \'a0
\f1 \

\f4 \'a0
\f1 \

\f4 \'a0
\f1 \

\f4 \'a0
\f1 \

\f4 \'a0
\f1 \

\f4 \'a0
\f1 \

\f4 \'a0
\f1 \

\f4 \'a0
\f1 \

\f4 \'a0
\f1 \

\f4 \'a0
\f1 \

\f4 \'a0
\f1 \

\f4 \'a0
\f1 \

\f4 \'a0
\f1 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 \cb3 \'a0
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf13 UNDERSCORE_CHAR\cf8  = \cf10 '_'\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf13 ORIGINAL_STRING\cf8  = \cf10 'testfaketestfaketest'\cf8 ;
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf13 MY_NEW_STRING_WITHOUT_USING_REGEX\cf8  = \cf13 ORIGINAL_STRING\cf8 .\cf9 replaceAll\cf8 (\cf10 'fake'\cf8 , \cf13 UNDERSCORE_CHAR\cf8 );
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 console\cf8 .\cf9 log\cf8 (\cf13 MY_NEW_STRING_WITHOUT_USING_REGEX\cf8 ); \cf2 // "test_test_test"
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf13 MY_NEW_STRING_BY_USING_REG_EXP_AND_SUBSTITUTE_FUNCTION\cf8  =
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf13 ORIGINAL_STRING\cf8 .\cf9 replaceAll\cf8 (\cf14 /fake/\cf5 g\cf8 , () \cf5 =>\cf8  \cf13 UNDERSCORE_CHAR\cf8 );
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf7 console\cf8 .\cf9 log\cf8 (\cf13 MY_NEW_STRING_BY_USING_REG_EXP_AND_SUBSTITUTE_FUNCTION\cf8 ); \cf2 // "test_test_test"
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf7 console\cf8 .\cf9 log\cf8 (\cf13 ORIGINAL_STRING\cf8 ); \cf2 // testfaketestfaketest
\f1\fs32 \cf4 \
\pard\pardeftab720\qj\partightenfactor0
\cf4 \cb16 \'a0\cb1 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 \cb3 \'a0
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // --------------------------------------- //
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // ---------- PRIVATE FUNCTIONS ---------- //
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // --------------------------------------- //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 /**
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* Allows to throw an error for a required parameter.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* 
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* \cf5 @param\cf2  \cf6 \{*\}\cf2  \cf7 parameterName\cf2  a parameter name.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* \cf5 @throws\cf2  Error.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0*/
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf9 throwErrorForRequiredParameter\cf8  = (\cf7 parameterName\cf8 ) \cf5 =>\cf8  \{
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf11 throw\cf8  \cf5 new\cf8  \cf6 Error\cf8 (\cf10 `\cf5 $\{\cf7 parameterName\cf5 \}\cf10  is a required argument.`\cf8 )
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \};
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 /**
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* Allows to build a Promise reject message for a specific waiting time.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* 
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* \cf5 @param\cf2  \cf6 \{*\}\cf2  \cf7 waitingTimeInSeconds\cf2  a waiting time in seconds.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* 
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* \cf5 @returns\cf2  a message as String.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0*/
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf9 buildPromiseRejectMessageForAWaitingTime\cf8  =
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 (\cf7 waitingTimeInSeconds\cf8  = \cf9 throwErrorForRequiredParameter\cf8 (\cf10 'waitingTimeInSeconds'\cf8 )) \cf5 =>
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \'a0 \'a0 \cf10 `Promise rejected after \cf5 $\{\cf7 waitingTimeInSeconds\cf5 \}\cf10  second(s)`\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // --------------------------------------- //
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // ----------------- RUN ----------------- //
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // --------------------------------------- //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf13 promiseWhichWillBeRejectedAfterOneSecond\cf8  = \cf5 new\cf8  \cf6 Promise\cf8 (
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 (\cf9 resolve\cf8 , \cf9 reject\cf8 ) \cf5 =>\cf8  \cf9 setTimeout\cf8 (\cf9 reject\cf8 , \cf12 1000\cf8 , \cf9 buildPromiseRejectMessageForAWaitingTime\cf8 (\cf12 1\cf8 )));
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf13 promiseWhichWillBeRejectedAfterTwoSeconds\cf8  = \cf5 new\cf8  \cf6 Promise\cf8 (
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 (\cf9 resolve\cf8 , \cf9 reject\cf8 ) \cf5 =>\cf8  \cf9 setTimeout\cf8 (\cf9 reject\cf8 , \cf12 2000\cf8 , \cf9 buildPromiseRejectMessageForAWaitingTime\cf8 (\cf12 2\cf8 )));
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf13 promiseWhichWillBeSuccesfullyResolvedAfterFiveSeconds\cf8  = \cf5 new\cf8  \cf6 Promise\cf8 (
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 (\cf9 resolve\cf8 ) \cf5 =>\cf8  \cf9 setTimeout\cf8 (\cf9 resolve\cf8 , \cf12 5000\cf8 , \cf10 'Promise successfully resolved after 5 seconds'\cf8 ));
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf13 promises\cf8  = [
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf13 promiseWhichWillBeRejectedAfterOneSecond\cf8 ,
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf13 promiseWhichWillBeRejectedAfterTwoSeconds\cf8 ,
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf13 promiseWhichWillBeSuccesfullyResolvedAfterFiveSeconds
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 ];
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf6 Promise\cf8 .\cf9 any\cf8 (\cf13 promises\cf8 ).
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf9 then\cf8 (\cf7 value\cf8  \cf5 =>\cf8  \cf7 console\cf8 .\cf9 log\cf8 (\cf7 value\cf8 ))
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 .\cf9 catch\cf8 (\cf7 error\cf8  \cf5 =>\cf8  \cf7 console\cf8 .\cf9 error\cf8 (\cf7 error\cf8 ));
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\sl313\qj\partightenfactor0

\f3\b\fs29\fsmilli14667 \cf4 \cb1 \'a0
\f4\b0 \

\f3\b \'a0
\f4\b0 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 \cb3 // --------------------------------------- //
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // ---------- PRIVATE FUNCTIONS ---------- //
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // --------------------------------------- //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 /**
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* Allows to throw an error for a required parameter.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* 
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* \cf5 @param\cf2  \cf6 \{*\}\cf2  \cf7 parameterName\cf2  a parameter name.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* \cf5 @throws\cf2  Error.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0*/
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf9 throwErrorForRequiredParameter\cf8  = (\cf7 parameterName\cf8 ) \cf5 =>\cf8  \{
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf11 throw\cf8  \cf5 new\cf8  \cf6 Error\cf8 (\cf10 `\cf5 $\{\cf7 parameterName\cf5 \}\cf10  is a required argument.`\cf8 )
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \};
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 /**
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* Allows to build a Promise reject message for a specific waiting time.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* 
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* \cf5 @param\cf2  \cf6 \{*\}\cf2  \cf7 waitingTimeInSeconds\cf2  a waiting time in seconds.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* 
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* \cf5 @returns\cf2  a message as String.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0*/
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf9 buildPromiseRejectMessageForAWaitingTime\cf8  =
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 (\cf7 waitingTimeInSeconds\cf8  = \cf9 throwErrorForRequiredParameter\cf8 (\cf10 'waitingTimeInSeconds'\cf8 )) \cf5 =>
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \'a0 \'a0 \cf10 `Promise rejected after \cf5 $\{\cf7 waitingTimeInSeconds\cf5 \}\cf10  second(s)`\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // --------------------------------------- //
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // ----------------- RUN ----------------- //
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // --------------------------------------- //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf13 promiseWhichWillBeRejectedAfterOneSecond\cf8  = \cf5 new\cf8  \cf6 Promise\cf8 (
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 (\cf9 resolve\cf8 , \cf9 reject\cf8 ) \cf5 =>\cf8  \cf9 setTimeout\cf8 (\cf9 reject\cf8 , \cf12 1000\cf8 , \cf9 buildPromiseRejectMessageForAWaitingTime\cf8 (\cf12 1\cf8 )));
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf13 promiseWhichWillBeRejectedAfterTwoSeconds\cf8  = \cf5 new\cf8  \cf6 Promise\cf8 (
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 (\cf9 resolve\cf8 , \cf9 reject\cf8 ) \cf5 =>\cf8  \cf9 setTimeout\cf8 (\cf9 reject\cf8 , \cf12 2000\cf8 , \cf9 buildPromiseRejectMessageForAWaitingTime\cf8 (\cf12 2\cf8 )));
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf13 promiseWhichWillBeRejectedAfterThreeSeconds\cf8  = \cf5 new\cf8  \cf6 Promise\cf8 (
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 (\cf9 resolve\cf8 , \cf9 reject\cf8 ) \cf5 =>\cf8  \cf9 setTimeout\cf8 (\cf9 reject\cf8 , \cf12 3000\cf8 , \cf9 buildPromiseRejectMessageForAWaitingTime\cf8 (\cf12 3\cf8 )));
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf13 promises\cf8  = [
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf13 promiseWhichWillBeRejectedAfterOneSecond\cf8 ,
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf13 promiseWhichWillBeRejectedAfterTwoSeconds\cf8 ,
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf13 promiseWhichWillBeRejectedAfterThreeSeconds
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 ];
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf6 Promise\cf8 .\cf9 any\cf8 (\cf13 promises\cf8 ).
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf9 then\cf8 (\cf7 value\cf8  \cf5 =>\cf8  \cf7 console\cf8 .\cf9 log\cf8 (\cf7 value\cf8 ))
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 .\cf9 catch\cf8 (\cf7 error\cf8  \cf5 =>\cf8  \cf7 console\cf8 .\cf9 error\cf8 (\cf7 error\cf8 ));
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\sl313\qj\partightenfactor0

\f3\b\fs29\fsmilli14667 \cf4 \cb1 \'a0
\f4\b0 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 \cb3 \'a0
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // --------------------------------------- //
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // ---------- PRIVATE FUNCTIONS ---------- //
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // --------------------------------------- //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 /**
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* Allows to throw an error for a required parameter.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* 
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* \cf5 @param\cf2  \cf6 \{*\}\cf2  \cf7 parameterName\cf2  a parameter name.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* \cf5 @throws\cf2  Error.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0*/
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf9 throwErrorForRequiredParameter\cf8  = (\cf7 parameterName\cf8 ) \cf5 =>\cf8  \{
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf11 throw\cf8  \cf5 new\cf8  \cf6 Error\cf8 (\cf10 `\cf5 $\{\cf7 parameterName\cf5 \}\cf10  is a required argument.`\cf8 )
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \};
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 /**
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* Allows to build a Promise resolution success message for a specific waiting time.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* 
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* \cf5 @param\cf2  \cf6 \{*\}\cf2  \cf7 waitingTimeInSeconds\cf2  a waiting time in seconds.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* 
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0* \cf5 @returns\cf2  a message as String.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 \'a0*/
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf9 buildPromiseResolutionSuccessMessageForAWaitingTime\cf8  =
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 (\cf7 waitingTimeInSeconds\cf8  = \cf9 throwErrorForRequiredParameter\cf8 (\cf10 'waitingTimeInSeconds'\cf8 )) \cf5 =>
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \'a0 \'a0 \cf10 `Promise successfully resolved after \cf5 $\{\cf7 waitingTimeInSeconds\cf5 \}\cf10  second(s)`\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // --------------------------------------- //
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // ----------------- RUN ----------------- //
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // --------------------------------------- //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf13 promiseWhichWillBeSuccesfullyResolvedAfterFiveSeconds\cf8  = \cf5 new\cf8  \cf6 Promise\cf8 (
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 (\cf9 resolve\cf8 ) \cf5 =>\cf8  \cf9 setTimeout\cf8 (\cf9 resolve\cf8 , \cf12 5000\cf8 , \cf9 buildPromiseResolutionSuccessMessageForAWaitingTime\cf8 (\cf12 5\cf8 )));
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf13 promiseWhichWillBeSuccesfullyResolvedAfterThreeSeconds\cf8  = \cf5 new\cf8  \cf6 Promise\cf8 (
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 (\cf9 resolve\cf8 ) \cf5 =>\cf8  \cf9 setTimeout\cf8 (\cf9 resolve\cf8 , \cf12 3000\cf8 , \cf9 buildPromiseResolutionSuccessMessageForAWaitingTime\cf8 (\cf12 3\cf8 )));
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf13 promiseWhichWillBeSuccesfullyResolvedAfterTwoSeconds\cf8  = \cf5 new\cf8  \cf6 Promise\cf8 (
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 (\cf9 resolve\cf8 ) \cf5 =>\cf8  \cf9 setTimeout\cf8 (\cf9 resolve\cf8 , \cf12 2000\cf8 , \cf9 buildPromiseResolutionSuccessMessageForAWaitingTime\cf8 (\cf12 2\cf8 )));
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf13 promises\cf8  = [
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf13 promiseWhichWillBeSuccesfullyResolvedAfterFiveSeconds\cf8 ,
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf13 promiseWhichWillBeSuccesfullyResolvedAfterThreeSeconds\cf8 ,
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf13 promiseWhichWillBeSuccesfullyResolvedAfterTwoSeconds
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 ];
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf6 Promise\cf8 .\cf9 race\cf8 (\cf13 promises\cf8 ).
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf9 then\cf8 (\cf7 value\cf8  \cf5 =>\cf8  \cf7 console\cf8 .\cf9 log\cf8 (\cf7 value\cf8 ))
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 .\cf9 catch\cf8 (\cf7 error\cf8  \cf5 =>\cf8  \cf7 console\cf8 .\cf9 error\cf8 (\cf7 error\cf8 ));
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\sl313\qj\partightenfactor0

\f3\b\fs29\fsmilli14667 \cf4 \cb1 \'a0
\f4\b0 \

\f3\b \'a0
\f4\b0 \

\f3\b \'a0
\f4\b0 \

\f3\b \'a0
\f4\b0 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 \cb3 const\cf8  \cf13 promiseWhichWillBeRejectedAfterFiveSeconds\cf8  = \cf5 new\cf8  \cf6 Promise\cf8 (
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 (\cf9 resolve\cf8 , \cf9 reject\cf8 ) \cf5 =>\cf8  \cf9 setTimeout\cf8 (\cf9 reject\cf8 , \cf12 5000\cf8 , \cf10 'Promise rejected after 5 seconds'\cf8 ));
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf13 promiseWhichWillBeSuccesfullyResolvedAfterTwoSeconds\cf8  = \cf5 new\cf8  \cf6 Promise\cf8 (
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 (\cf9 resolve\cf8 ) \cf5 =>\cf8  \cf9 setTimeout\cf8 (\cf9 resolve\cf8 , \cf12 2000\cf8 , \cf10 'Promise successfully resolved after 2 seconds'\cf8 ));
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf13 promises\cf8  = [
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf13 promiseWhichWillBeRejectedAfterFiveSeconds\cf8 ,
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf13 promiseWhichWillBeSuccesfullyResolvedAfterTwoSeconds\cf8 ,
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 ];
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf6 Promise\cf8 .\cf9 race\cf8 (\cf13 promises\cf8 ).
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf9 then\cf8 (\cf7 value\cf8  \cf5 =>\cf8  \cf7 console\cf8 .\cf9 log\cf8 (\cf7 value\cf8 ))
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 .\cf9 catch\cf8 (\cf7 error\cf8  \cf5 =>\cf8  \cf7 console\cf8 .\cf9 error\cf8 (\cf7 error\cf8 ));
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\sl313\qj\partightenfactor0

\f3\b\fs29\fsmilli14667 \cf4 \cb1 \'a0
\f4\b0 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 \cb3 const\cf8  \cf13 promiseWhichWillBeRejectedAfterOneSecond\cf8  = \cf5 new\cf8  \cf6 Promise\cf8 (
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 (\cf9 resolve\cf8 , \cf9 reject\cf8 ) \cf5 =>\cf8  \cf9 setTimeout\cf8 (\cf9 reject\cf8 , \cf12 1000\cf8 , \cf10 'Promise rejected after 1 second'\cf8 ));
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf13 promiseWhichWillBeSuccesfullyResolvedAfterTwoSeconds\cf8  = \cf5 new\cf8  \cf6 Promise\cf8 (
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 (\cf9 resolve\cf8 ) \cf5 =>\cf8  \cf9 setTimeout\cf8 (\cf9 resolve\cf8 , \cf12 2000\cf8 , \cf10 'Promise successfully resolved after 2 seconds'\cf8 ));
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf13 promises\cf8  = [
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf13 promiseWhichWillBeRejectedAfterOneSecond\cf8 ,
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf13 promiseWhichWillBeSuccesfullyResolvedAfterTwoSeconds\cf8 ,
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 ];
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf6 Promise\cf8 .\cf9 race\cf8 (\cf13 promises\cf8 ).
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf9 then\cf8 (\cf7 value\cf8  \cf5 =>\cf8  \cf7 console\cf8 .\cf9 log\cf8 (\cf7 value\cf8 ))
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 .\cf9 catch\cf8 (\cf7 error\cf8  \cf5 =>\cf8  \cf7 console\cf8 .\cf9 error\cf8 (\cf7 error\cf8 ));
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\sl313\qj\partightenfactor0

\f3\b\fs29\fsmilli14667 \cf4 \cb1 \'a0
\f4\b0 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 \cb3 \'a0
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf13 Y\cf8  = \cf12 10\cf8 ;
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // **************************** //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 let\cf8  \cf7 x\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 x\cf8  &&= \cf13 Y\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // ici x ne sera pas modifi\'e9 car il vaut undefined
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 console\cf8 .\cf9 log\cf8 (\cf7 x\cf8 ); \cf2 // undefined
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // **************************** //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf7 x\cf8  = \cf5 null\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 x\cf8  &&= \cf13 Y\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // ici x ne sera pas modifi\'e9 car il vaut null
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 console\cf8 .\cf9 log\cf8 (\cf7 x\cf8 ); \cf2 // null
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // **************************** //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf7 x\cf8  = \cf5 false\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 x\cf8  &&= \cf13 Y\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // ici x ne sera pas modifi\'e9 car il vaut false
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 console\cf8 .\cf9 log\cf8 (\cf7 x\cf8 ); \cf2 // false
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // **************************** //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf7 x\cf8  = \cf12 0\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 x\cf8  &&= \cf13 Y\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // ici x ne sera pas modifi\'e9 car sa valeur 0
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // ne correspond pas \'e0 une valeur vraie
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 console\cf8 .\cf9 log\cf8 (\cf7 x\cf8 ); \cf2 // 0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // **************************** //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf7 x\cf8  = \cf10 ''\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 x\cf8  &&= \cf13 Y\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // ici x ne sera pas modifi\'e9 car
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // sa valeur '' (cha\'eene vide) ne correspond pas \'e0 une valeur vraie
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 console\cf8 .\cf9 log\cf8 (\cf7 x\cf8 ); \cf2 // ''
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // **************************** //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf7 x\cf8  = \cf10 ' '\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 x\cf8  &&= \cf13 Y\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // ici x sera modifi\'e9 car sa valeur ' '
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // (cha\'eene compos\'e9e d'un espace) correspond \'e0 une valeur vraie
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 console\cf8 .\cf9 log\cf8 (\cf7 x\cf8 ); \cf2 // 10
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // **************************** //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf7 x\cf8  = \cf12 1\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 x\cf8  &&= \cf13 Y\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // ici x sera modifi\'e9 car sa valeur 1
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // correspond \'e0 une valeur vraie
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 console\cf8 .\cf9 log\cf8 (\cf7 x\cf8 ); \cf2 // 10
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // **************************** //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf7 x\cf8  = \cf12 2\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 x\cf8  &&= \cf13 Y\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // ici x sera modifi\'e9 car sa valeur correspond \'e0 une valeur vraie
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 console\cf8 .\cf9 log\cf8 (\cf7 x\cf8 ); \cf2 // 10
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // **************************** //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf7 x\cf8  = \cf5 true\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 x\cf8  &&= \cf13 Y\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // ici x sera modifi\'e9 car sa valeur correspond \'e0 une valeur vraie
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 console\cf8 .\cf9 log\cf8 (\cf7 x\cf8 ); \cf2 // 10
\f2\b\fs32 \cf17 \cb1 \uc0\u8232 
\f1\b0 \cf4 \cb3 \
\pard\pardeftab720\li1440\sl313\qj\partightenfactor0

\f3\b\fs29\fsmilli14667 \cf4 \cb1 \'a0
\f4\b0 \

\f3\b \'a0
\f4\b0 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 \cb3 const\cf8  \cf13 Y\cf8  = \cf12 10\cf8 ;
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // **************************** //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 let\cf8  \cf7 x\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 x\cf8  ||= \cf13 Y\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // ici x sera modifi\'e9 car il vaut undefined
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 console\cf8 .\cf9 log\cf8 (\cf7 x\cf8 ); \cf2 // 10
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // **************************** //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf7 x\cf8  = \cf5 null\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 x\cf8  ||= \cf13 Y\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // ici x sera modifi\'e9 car il vaut null
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 console\cf8 .\cf9 log\cf8 (\cf7 x\cf8 ); \cf2 // 10
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // **************************** //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf7 x\cf8  = \cf5 false\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 x\cf8  ||= \cf13 Y\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // ici x sera modifi\'e9 car il vaut false
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 console\cf8 .\cf9 log\cf8 (\cf7 x\cf8 ); \cf2 // 10
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // **************************** //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf7 x\cf8  = \cf12 0\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 x\cf8  ||= \cf13 Y\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // ici x sera modifi\'e9 car sa valeur 0 
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // ne correspond pas \'e0 une valeur vraie
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 console\cf8 .\cf9 log\cf8 (\cf7 x\cf8 ); \cf2 // 10
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // **************************** //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf7 x\cf8  = \cf10 ''\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 x\cf8  ||= \cf13 Y\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // ici x sera modifi\'e9 car sa valeur '' (cha\'eene vide)
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // ne correspond pas \'e0 une valeur vraie
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 console\cf8 .\cf9 log\cf8 (\cf7 x\cf8 ); \cf2 // 10
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // **************************** //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf7 x\cf8  = \cf10 ' '\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 x\cf8  ||= \cf13 Y\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // ici x ne sera pas modifi\'e9 car sa valeur ' '
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // (cha\'eene compos\'e9e d'un espace) correspond \'e0 une valeur vraie
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 console\cf8 .\cf9 log\cf8 (\cf7 x\cf8 ); \cf2 // ' '
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // **************************** //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf7 x\cf8  = \cf12 1\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 x\cf8  ||= \cf13 Y\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // ici x ne sera pas modifi\'e9 car sa valeur 1
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // correspond \'e0 une valeur vraie
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 console\cf8 .\cf9 log\cf8 (\cf7 x\cf8 ); \cf2 // 1
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // **************************** //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf7 x\cf8  = \cf12 2\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 x\cf8  ||= \cf13 Y\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // ici x ne sera pas modifi\'e9 car sa valeur 2
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // correspond \'e0 une valeur vraie
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 console\cf8 .\cf9 log\cf8 (\cf7 x\cf8 ); \cf2 // 2
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // **************************** //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf7 x\cf8  = \cf5 true\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 x\cf8  ||= \cf13 Y\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // ici x ne sera pas modifi\'e9 car sa valeur
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // correspond \'e0 une valeur vraie
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 console\cf8 .\cf9 log\cf8 (\cf7 x\cf8 ); \cf2 // true
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\sl313\sa213\qj\partightenfactor0

\f3\b\fs29\fsmilli14667 \cf4 \cb1 \'a0
\f4\b0 \
\pard\pardeftab720\sl342\partightenfactor0

\f2\b\fs32 \cf4 \
\pard\pardeftab720\sl313\sa213\partightenfactor0

\f3\fs29\fsmilli14667 \cf4 \'a0
\f1\b0\fs32 \
\pard\pardeftab720\li1440\sl313\qj\partightenfactor0

\f3\b\fs29\fsmilli14667 \cf4 \'a0
\f4\b0 \

\f3\b \'a0
\f4\b0 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 \cb3 const\cf8  \cf13 Y\cf8  = \cf12 10\cf8 ;
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // **************************** //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 let\cf8  \cf7 x\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 x\cf8  ??= \cf13 Y\cf8 ; \cf2 // ici x sera modifi\'e9 car il vaut undefined
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 console\cf8 .\cf9 log\cf8 (\cf7 x\cf8 ); \cf2 // 10
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // **************************** //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf7 x\cf8  = \cf5 null\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 x\cf8  ??= \cf13 Y\cf8 ; \cf2 // ici x sera modifi\'e9 car il vaut null
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 console\cf8 .\cf9 log\cf8 (\cf7 x\cf8 ); \cf2 // 10
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // **************************** //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf7 x\cf8  = \cf5 false\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 x\cf8  ??= \cf13 Y\cf8 ; \cf2 // ici x ne sera pas modifi\'e9 car il poss\'e8de une valeur
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 console\cf8 .\cf9 log\cf8 (\cf7 x\cf8 ); \cf2 // false
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // **************************** //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf7 x\cf8  = \cf12 0\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 x\cf8  ??= \cf13 Y\cf8 ; \cf2 // ici x ne sera pas modifi\'e9 car il poss\'e8de une valeur
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 console\cf8 .\cf9 log\cf8 (\cf7 x\cf8 ); \cf2 // 0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // **************************** //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf7 x\cf8  = \cf10 ''\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 x\cf8  ??= \cf13 Y\cf8 ; \cf2 // ici x ne sera pas modifi\'e9 car il poss\'e8de une valeur
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 console\cf8 .\cf9 log\cf8 (\cf7 x\cf8 ); \cf2 // ''
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // **************************** //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf7 x\cf8  = \cf10 ' '\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 x\cf8  ??= \cf13 Y\cf8 ; \cf2 // ici x ne sera pas modifi\'e9 car il poss\'e8de une valeur
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 console\cf8 .\cf9 log\cf8 (\cf7 x\cf8 ); \cf2 // ' '
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // **************************** //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf7 x\cf8  = \cf12 1\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 x\cf8  ??= \cf13 Y\cf8 ; \cf2 // ici x ne sera pas modifi\'e9 car il poss\'e8de une valeur
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 console\cf8 .\cf9 log\cf8 (\cf7 x\cf8 ); \cf2 // 1
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // **************************** //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf7 x\cf8  = \cf12 2\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 x\cf8  ??= \cf13 Y\cf8 ; \cf2 // ici x ne sera pas modifi\'e9 car il poss\'e8de une valeur
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 console\cf8 .\cf9 log\cf8 (\cf7 x\cf8 ); \cf2 // 2
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // **************************** //
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf7 x\cf8  = \cf5 true\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 x\cf8  ??= \cf13 Y\cf8 ; \cf2 // ici x ne sera pas modifi\'e9 car il poss\'e8de une valeur
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf7 console\cf8 .\cf9 log\cf8 (\cf7 x\cf8 ); \cf2 // true
\f1\fs32 \cf4 \
\pard\pardeftab720\qj\partightenfactor0
\cf4 \cb1 \'a0\
\pard\pardeftab720\li960\fi480\sl313\qj\partightenfactor0

\f3\b\fs29\fsmilli14667 \cf4 \'a0
\f4\b0 \

\f3\b Fonction priv\'e9e\'a0:
\f4\b0 \
#myFunction(param1, \'85, paramN) \{\
\'85\
\}\

\f3\b \'a0
\f4\b0 \

\f3\b Getter priv\'e9\'a0:
\f4\b0 \
get #myField() \{\
\'85\
\}\
\'a0\

\f3\b Setter priv\'e9\'a0:
\f4\b0 \
set #myField(value) \{\
\'85\
\}\
\'a0\
\pard\pardeftab720\li960\fi480\sl313\sa213\qj\partightenfactor0
\cf4 \'a0\
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs18\fsmilli9333 \cf2 \cb3 /**
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf2 \'a0* This class defines a Person.
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf2 \'a0*/
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs18\fsmilli9333 \cf5 class\cf8  \cf6 Person\cf8  \{
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \cf7 #id\cf8 ; \cf2 // Private field 'id'
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \cf7 #firstname\cf8 ; \cf2 // Private field 'firstname'
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \cf7 #lastname\cf8 ; \cf2 // Private field 'lastname'
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \cf2 /**
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs18\fsmilli9333 \cf2 \'a0 \'a0 \'a0* Public constructor.
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf2 \'a0 \'a0 \'a0*/
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \cf5 constructor\cf8 () \{
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \'a0 \'a0 \cf2 // It calls the function setter 'set #uuid(id)'
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \'a0 \'a0 \cf2 // allowing to set the private field 'id'.
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \'a0 \'a0 \cf5 this\cf8 .\cf7 #uuid\cf8  = \cf6 Person\cf8 .\cf9 #generateUUID\cf8 ();
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \}
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \cf2 /**
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs18\fsmilli9333 \cf2 \'a0 \'a0 \'a0* Public setter allowing to set a firstname.
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf2 \'a0 \'a0 \'a0*/
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \cf5 set\cf8  \cf7 firstname\cf8 (\cf7 firstname\cf8 ) \{
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \'a0 \'a0 \cf5 this\cf8 .\cf7 #firstname\cf8  = \cf7 firstname\cf8 ;
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \}
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \cf2 /**
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs18\fsmilli9333 \cf2 \'a0 \'a0 \'a0* Public getter allowing to get a firstname.
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf2 \'a0 \'a0 \'a0*/
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \cf5 get\cf8  \cf7 firstname\cf8 () \{
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \'a0 \'a0 \cf11 return\cf8  \cf5 this\cf8 .\cf7 #firstname\cf8 ;
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \}
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \cf2 /**
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs18\fsmilli9333 \cf2 \'a0 \'a0 \'a0* Public setter allowing to set a lastname.
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf2 \'a0 \'a0 \'a0*/
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \cf5 set\cf8  \cf7 lastname\cf8 (\cf7 lastname\cf8 ) \{
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \'a0 \'a0 \cf5 this\cf8 .\cf7 #lastname\cf8  = \cf7 lastname\cf8 ;
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \}
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \cf2 /**
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs18\fsmilli9333 \cf2 \'a0 \'a0 \'a0* Public getter allowing to get a lastname.
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf2 \'a0 \'a0 \'a0*/
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \cf5 get\cf8  \cf7 lastname\cf8 () \{
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \'a0 \'a0 \cf11 return\cf8  \cf5 this\cf8 .\cf7 #lastname\cf8 ;
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \}
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \cf2 /**
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs18\fsmilli9333 \cf2 \'a0 \'a0 \'a0* Public getter allowing to get the field 'id' by retrieving it
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf2 \'a0 \'a0 \'a0* thanks to the private getter 'get #uuid'.
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf2 \'a0 \'a0 \'a0*/
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \cf5 get\cf8  \cf7 id\cf8 () \{
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \'a0 \'a0 \cf11 return\cf8  \cf5 this\cf8 .\cf7 #uuid\cf8 ;
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \}
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \cf2 /**
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs18\fsmilli9333 \cf2 \'a0 \'a0 \'a0* Private setter allowing to set an id.
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf2 \'a0 \'a0 \'a0*/
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \cf5 set\cf8  #\cf9 uuid\cf8 (\cf7 id\cf8 ) \{
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \'a0 \'a0 \cf5 this\cf8 .\cf7 #id\cf8  = \cf7 id\cf8 ;
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \}
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \cf2 /**
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs18\fsmilli9333 \cf2 \'a0 \'a0 \'a0* Private getter allowing to get the current private field id.
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf2 \'a0 \'a0 \'a0* 
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf2 \'a0 \'a0 \'a0* \cf5 @returns\cf2  the current private field id.
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf2 \'a0 \'a0 \'a0*/
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \cf5 get\cf8  #\cf9 uuid\cf8 () \{
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \'a0 \'a0 \cf11 return\cf8  \cf5 this\cf8 .\cf7 #id\cf8 ;
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \}
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \cf2 /**
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs18\fsmilli9333 \cf2 \'a0 \'a0 \'a0* Public function allowing to return a stringified JSON defining
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf2 \'a0 \'a0 \'a0* an instance of Person.
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf2 \'a0 \'a0 \'a0* 
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf2 \'a0 \'a0 \'a0* \cf5 @returns\cf2  a Person as a JSON String.
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf2 \'a0 \'a0 \'a0*/
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \cf9 toString\cf8 () \{
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \'a0 \'a0 \cf11 return\cf8  \cf10 `person: \cf5 $\{\cf7 JSON\cf8 .\cf9 stringify\cf8 (
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \{
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \cf7 id:\cf8  \cf5 this\cf8 .\cf7 #id\cf8 ,
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \cf7 firstName:\cf8  \cf5 this\cf8 .\cf7 #firstname\cf8 ,
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \cf7 lastname:\cf8  \cf5 this\cf8 .\cf7 #lastname
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \})\cf5 \}\cf10 `\cf8 ;
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \}
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \cf2 /**
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs18\fsmilli9333 \cf2 \'a0 \'a0 \'a0* Private static function allowing to generate a new stringified UUID.
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf2 \'a0 \'a0 \'a0* 
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf2 \'a0 \'a0 \'a0* \cf5 @returns\cf2  a stringified UUID.
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf2 \'a0 \'a0 \'a0*/
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \cf5 static\cf8  #\cf9 generateUUID\cf8 () \{
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \'a0 \'a0 \cf11 return\cf8  \cf10 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'\cf8 .\cf9 replace\cf8 (\cf14 /\cf10 [\cf14 xy\cf10 ]\cf14 /\cf5 g\cf8 , (\cf7 currentChar\cf8 ) \cf5 =>\cf8  \{
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \cf5 const\cf8  \cf13 X_VALUE\cf8  = (\cf5 new\cf8  \cf6 Date\cf8 ().\cf9 getTime\cf8 () + \cf7 Math\cf8 .\cf9 random\cf8 () * \cf12 16\cf8 ) % \cf12 16\cf8  | \cf12 0\cf8 ;
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \cf11 return\cf8  (\cf7 currentChar\cf8  === \cf10 'x'\cf8  ? \cf13 X_VALUE\cf8  : (\cf13 X_VALUE\cf8  & \cf12 0x3\cf8  | \cf12 0x8\cf8 )).\cf9 toString\cf8 (\cf12 16\cf8 );
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \'a0 \'a0 \});
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \}
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \}
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf5 const\cf8  \cf13 person\cf8  = \cf5 new\cf8  \cf6 Person\cf8 ();
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs18\fsmilli9333 \cf13 person\cf8 .\cf7 firstname\cf8  = \cf10 'Archibald'\cf8 ;
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf13 person\cf8 .\cf7 lastname\cf8  = \cf10 'Haddock'\cf8 ;
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs18\fsmilli9333 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs18\fsmilli9333 \cf7 console\cf8 .\cf9 log\cf8 (\cf13 person\cf8 .\cf9 toString\cf8 ());
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\sl313\qj\partightenfactor0

\f3\b\fs29\fsmilli14667 \cf4 \cb1 \'a0
\f4\b0 \

\f3\b \'a0
\f4\b0 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs18\fsmilli9333 \cf5 \cb3 let\cf8  \cf13 person\cf8  = \{
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \cf7 firstname:\cf8  \cf10 "Thomas"\cf8 ,
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0 \'a0 \cf7 lastname:\cf8  \cf10 "Sawyer"
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \};
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs18\fsmilli9333 \cf2 // Caching the person object
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs18\fsmilli9333 \cf5 const\cf8  \cf13 personRefObject\cf8  = \cf5 new\cf8  \cf9 WeakRef\cf8 (\cf13 person\cf8 );
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs18\fsmilli9333 \cf13 person\cf8  = \cf5 null\cf8 ;
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs18\fsmilli9333 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs18\fsmilli9333 \cf2 // Retrieving the person object from the cache
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs18\fsmilli9333 \cf5 const\cf8  \cf13 personFromCache\cf8  = \cf13 personRefObject\cf8 .\cf9 deref\cf8 ();
\f1\fs32 \cf4 \

\f0\fs18\fsmilli9333 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs18\fsmilli9333 \cf7 console\cf8 .\cf9 log\cf8 (\cf10 'The informations about the person coming from the cache are:'\cf8 , \cf13 personFromCache\cf8 );
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\sl313\qj\partightenfactor0

\f3\b\fs29\fsmilli14667 \cf4 \cb1 \'a0
\f4\b0 \

\f3\b \'a0
\f4\b0 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 \cb3 \'a0
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf5 let\cf8  \cf7 person\cf8  = \{ \cf7 firstname:\cf8  \cf10 'Thomas'\cf8 , \cf7 lastname:\cf8  \cf10 'Sawyer'\cf8  \};
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf5 let\cf8  \cf7 takenIntoAccountByGarbageCollector\cf8  = \cf5 false\cf8 ;
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // Le registre est cr\'e9\'e9 en passant la fonction callback comme
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // param\'e8tre au constructeur.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf13 registry\cf8  = \cf5 new\cf8  \cf9 FinalizationRegistry\cf8 (\cf7 heldValue\cf8  \cf5 =>\cf8  \{
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf7 takenIntoAccountByGarbageCollector\cf8  = \cf5 true\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf7 console\cf8 .\cf9 log\cf8 (\cf10 `The \cf5 $\{\cf7 heldValue\cf5 \}\cf10  object has been collected in the 'Garbage Collector'.`\cf8 )
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \});
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // Ensuite, avec la fonction register on inscrit au registre
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // les diff\'e9rents objets pour lesquels on veut que la fonction
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // de rappel de nettoyage soit appel\'e9e. Cette fonction prend en
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // argument la valeur courante et une valeur tenue pour celle-ci.
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf13 registry\cf8 .\cf9 register\cf8 (\cf7 person\cf8 , \cf7 JSON\cf8 .\cf9 stringify\cf8 (\cf7 person\cf8 ));
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // Chaque seconde, on affiche dans la console si l'objet 'person'
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // existe toujours et dans le cas o\'f9 il n'existerait plus et s'il a
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // \'e9t\'e9 intercept\'e9 avant que le 'Garbage Collector' ne l'ait nettoy\'e9e,
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // on arr\'eate de logguer son \'e9tat de vie.
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf5 const\cf8  \cf13 intervalId\cf8  = \cf9 setInterval\cf8 (() \cf5 =>\cf8  \{
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf11 if\cf8  (\cf7 person\cf8 ) \{
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \'a0 \'a0 \cf7 console\cf8 .\cf9 log\cf8 (\cf10 'The person already exists:'\cf8 , \cf7 person\cf8 );
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \} \cf11 else\cf8  \{
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \'a0 \'a0 \cf7 console\cf8 .\cf9 log\cf8 (\cf10 'The person does not exist anymore.'\cf8 );
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \'a0 \'a0 \cf11 if\cf8  (\cf7 takenIntoAccountByGarbageCollector\cf8 ) \{
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \cf9 clearInterval\cf8 (\cf13 intervalId\cf8 );
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \'a0 \'a0 \} \cf11 else\cf8  \{
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \cf7 console\cf8 .\cf9 log\cf8 (\cf10 'We are waiting for the \cf15 \\'\cf10 Garbage Collector\cf15 \\'\cf10 .'\cf8 );
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \'a0 \'a0 \}
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \}
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \}, \cf12 1000\cf8 );
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf2 // Au bout de 3 secondes de traitement on passe \'e0 null
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf2 // l'objet 'person'.
\f1\fs32 \cf4 \
\pard\pardeftab720\li1440\partightenfactor0

\f0\fs21\fsmilli10667 \cf9 setTimeout\cf8 (() \cf5 =>\cf8  \{
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \'a0 \'a0 \cf7 person\cf8  = \cf5 null\cf8 ;
\f1\fs32 \cf4 \

\f0\fs21\fsmilli10667 \cf8 \}, \cf12 3000\cf8 );
\f1\fs32 \cf4 \
\pard\pardeftab720\qj\partightenfactor0
\cf4 \cb1 \'a0\
}